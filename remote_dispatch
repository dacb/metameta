#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source $DIR/init.sh

usage() {
cat << EOF
usage: $0 <sample name>
EOF
	exit 1
}

if [ $# -ne 1 ]
then
	usage
fi

sample=$1

remote_fastq_path=`awk -F'\t' -v sample="$sample" '{ if ($1 == sample) printf("%s\n", $6); }' $SAMPLE_INFO`
if [ ! -n "$remote_fastq_path" ]
then
	fatal_error "unable to find sample $sample in sample info file"
fi

local_path=`\ls $RAW_DATA_ROOT/Methane_oxidation_as_a_community_function__defining_partnerships_and_strategies_through_sequencing_metagenomes_and_metatranscriptomes_of_laboratory_manipulated_microcosms__Lake_Washington_sediment_Metatranscriptome_*_\[$sample\]/Raw_Data/*.fastq.gz`

# upload the fastq using the pathes constructed
upload_fastq $sample $local_path

# qsub the jobs if the log files don't already exist
echo checking for log files for the jobs
# quick function to do this
# initialize $missing to 0 (missing=0) before calling this function
log_check() {
	log=$1
	# if any value of $2 is present this is in quiet mode, see below
	log_path=workspace/$sample/bwa/$log.log
	log_check=`remote_file_exists $log_path`
	if [ -n "$log_check" ]; then
		echo "log_check found $log_path on remote"
	else
		# mute if more than 1 argument is present
		if [ $# -eq 1 ]; then
			echo "log_check could not find $log_path on remote"
		fi
		# global used to track # of missing log files
		missing=$(($missing+1))
	fi
}
# global used by the function above to track the number of missing logs
missing=0
log_check aln
log_check samtools
log_check database
if [ "$missing" -ne 0 ]; then
	echo "some log files are missing"
	if [ "$missing" -eq 3 ]; then
		echo "no log files found on remote, submitting jobs"
		ssh_cmd "(cd $REMOTE_ROOT/analysis; ./sample_submit $sample)"
	else
		echo "WARNING: some of the log files were missing for $sample, but not all" 
		job_complete=1
	fi
else
	echo "all log files found for job, it must be complete - skipping submit and poll"
	job_complete=1
fi

# poll for the .log files that signal completion
echo "entering main log polling loop"
minutes=0
last_minutes=0
last_missing=$missing
while [ ! -n "$job_complete" ]; do
		sleep 60
		minutes=$(($minutes + 1))
		missing=0
		log_check aln -quiet
		log_check samtools -quiet
		log_check database -quiet
		if [ $missing -ne 0 ]; then
			if [ $missing -ne $last_missing ]; then
				if [ $last_missing -eq 3 ]; then
					last_completed_job="aln"
				elif [ $last_missing -eq 2 ]; then
					last_completed_job="samtools"
				else
					# won't happen
					last_completed_job="database"
				fi
				elapsed=$(($minutes - $last_minutes))
				echo "job $last_completed_job took $elapsed minutes"
				last_missing=$missing
			fi
		else
				echo "all log files found for sample $sample after $minutes minutes"
				job_complete=1
				last_missing=$missing
		fi
		if [ $(($minutes % 60)) -eq 0 ]
		then
				echo "1 hour has elapsed"
		fi
done

# remove the fastq file
echo "removing remote fastq"
remove_path_on_remote data/$sample

# bring down the results
echo "rsyncing results"
rsync_remote

# clean up the remote workspace so we don't run out of space
echo "remove workspace on remote"
remove_path_on_remote workspace/$sample
